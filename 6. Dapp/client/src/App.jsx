import { EthProvider } from "./contexts/EthContext";
import Voting from "./components/Voting";
import '@rainbow-me/rainbowkit/styles.css';
import { ConnectButton } from '@rainbow-me/rainbowkit';

import {
  getDefaultWallets,
  RainbowKitProvider,
} from '@rainbow-me/rainbowkit';
import { configureChains, createConfig, WagmiConfig } from 'wagmi';
import {
  sepolia,
  localhost,
} from 'wagmi/chains';
import { publicProvider } from 'wagmi/providers/public';


const { chains, publicClient } = configureChains(
  [localhost, sepolia],
  [publicProvider()]
);

const { connectors } = getDefaultWallets({
  appName: 'My RainbowKit App',
  projectId: 'c490ebeb82c35eb1085525b62b2bc2fd',
  chains
});

const wagmiConfig = createConfig({
  autoConnect: true,
  connectors,
  publicClient
})

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}


function App() {
  return (
    <EthProvider>
      {/* <WagmiConfig config={wagmiConfig}>
        <RainbowKitProvider chains={chains}> */}
      {/* <ConnectButton /> */}
      <Voting />
      {/* </RainbowKitProvider>
      </WagmiConfig> */}
    </EthProvider>

  );
}

export default App;
